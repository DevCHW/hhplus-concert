##### 콘서트 예약 시나리오
##### 애플리케이션 실행 이후 아래의 API를 순차적으로 호출하여 결과 확인
##### 잔고 충전 -> 잔고 조회 -> 대기열 토큰 발급 -> 대기열 토큰 조회 -> 콘서트 목록 조회 -> 예약 가능한 콘서트 일정 목록 조회 -> 예약 가능한 좌석 목록 조회 -> 예약 -> 결제

# 시나리오 수행 유저 ID 설정
@userId = {{userId}}

### 잔고 충전
PUT {{host}}/api/v1/balance/charge
Content-Type: application/json

{
  "userId": "{{userId}}",
  "amount": 100
}

### 잔고 조회
GET {{host}}/api/v1/balance?userId={{userId}}
Content-Type: application/json

### 대기열 토큰 생성
POST {{host}}/api/v1/token
Content-Type: application/json

{
  "userId": "{{userId}}"
}

> {%
    client.global.set("queueToken", response.body.data.token)
%}

### 대기열 토큰 조회
GET {{host}}/api/v1/token?token={{queueToken}}
Content-Type: application/json

### 콘서트 목록 조회
GET {{host}}/api/v1/concerts
Content-Type: application/json
QUEUE_TOKEN: {{queueToken}}

> {%
    client.global.set("concertId", response.body.data[0].id)
%}

### 예약 가능 콘서트 일정 목록 조회
GET {{host}}/api/v1/concerts/{{concertId}}/schedules/available
Content-Type: application/json
QUEUE_TOKEN: {{queueToken}}

> {%
    client.global.set("concertScheduleId", response.body.data[0].id)
%}

### 예약 가능 좌석 목록 조회
GET {{host}}/api/v1/concerts/{{concertId}}/schedules/{{concertScheduleId}}/seats/available
Content-Type: application/json
QUEUE_TOKEN: {{queueToken}}

> {%
    client.global.set("seatId", response.body.data[0].id)
%}

### 예약
POST {{host}}/api/v1/reservations
Content-Type: application/json
QUEUE_TOKEN: {{queueToken}}

{
  "concertId": "{{concertId}}",
  "userId": "{{userId}}",
  "seatId": "{{seatId}}"
}

> {%
    client.global.set("reservationId", response.body.data.id)
%}

### 예약 결제
POST {{host}}/api/v1/reservations/pay
Content-Type: application/json
QUEUE_TOKEN: {{queueToken}}

{
  "reservationId": "{{reservationId}}",
  "token": "{{queueToken}}"
}